version: '3.9'

services:
  aquatics_app:
    build: 
      context: .
      dockerfile: Dockerfile
    image: aquatics
    container_name: aquatics_app
    volumes:
      - ./:/app
    restart: always
    ports:
      - "8030:80"
    depends_on:
      - aquatics_db
      - aquatics_phpmyadmin
    environment:
      - DB_CONNECTION=mysql
      - DB_HOST=aquatics_db
      - DB_PORT=3306
      - DB_DATABASE=aquatics
      - MYSQL_USER=local_dev
      - MYSQL_PASSWORD=password
    networks:
      - backend

  composer_aquatics:
    image: composer:latest
    container_name: composer_aquatics
    volumes:
      - ./:/app/
    working_dir: /app/
    entrypoint: [ 'composer' ]

  npm_aquatics:
    image: node:current-alpine
    container_name: npm_aquatics
    volumes:
      - ./:/app/
    ports:
      - "3010:3010"
    working_dir: /app/
    entrypoint: [ 'npm' ]

  aquatics_db:
    image: mysql:8.0
    container_name: aquatics_db
    volumes:
      - aquatics_data:/var/lib/mysql
    restart: always
    tty: true
    environment:
      - MYSQL_ROOT_PASSWORD=password_root
      - MYSQL_DATABASE=aquatics
      - MYSQL_USER=local_dev
      - MYSQL_PASSWORD=password
    networks:
      - backend

  aquatics_phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: aquatics_phpmyadmin
    restart: always
    ports:
      - "8031:80"
    depends_on:
      - aquatics_db
    environment:
      - PMA_HOST=aquatics_db
      - MYSQL_ROOT_PASSWORD=password_root
    networks:
      - backend


volumes:
  aquatics_data:


networks:
  backend:
    driver: bridge